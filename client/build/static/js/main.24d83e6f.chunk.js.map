{"version":3,"sources":["App.js","index.js"],"names":["App","userInput","setUserInput","useState","image","setImage","chatHistory","setChatHistory","isLoading","setIsLoading","useEffect","async","storedHistory","localStorage","getItem","JSON","parse","error","console","loadHistory","React","createElement","className","src","alt","type","value","onChange","event","target","placeholder","files","onClick","formData","FormData","append","response","axios","post","headers","Content-Type","newChatHistory","role","content","data","text","prevHistory","setItem","stringify","disabled","map","message","index","key","concat","removeItem","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"2MAoHeA,MAhHf,WACE,MAAOC,EAAWC,GAAgBC,mBAAS,KACpCC,EAAOC,GAAYF,mBAAS,OAC5BG,EAAaC,GAAkBJ,mBAAS,KACxCK,EAAWC,GAAgBN,oBAAS,GAqE3C,OAnEAO,oBAAU,KAEYC,WAClB,IAGE,MAAMC,EAAgBC,aAAaC,QAAQ,eACvCF,GACFL,EAAeQ,KAAKC,MAAMJ,IAE5B,MAAOK,GACPC,QAAQD,MAAM,8BAA+BA,KAGjDE,IACC,IAqDDC,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,OAAKE,IAAI,iBAAiBC,IAAI,MAAMF,UAAU,cAC9CF,IAAAC,cAAA,MAAIC,UAAU,aAAY,YAC1BF,IAAAC,cAAA,KAAGC,UAAU,mBAAkB,kOAI/BF,IAAAC,cAAA,OAAKC,UAAU,mBACbF,IAAAC,cAAA,SACEI,KAAK,OACLC,MAAOzB,EACP0B,SA9DmBC,IACzB1B,EAAa0B,EAAMC,OAAOH,QA8DpBI,YAAY,+CACZR,UAAU,eAEZF,IAAAC,cAAA,SAAOI,KAAK,OAAOE,SA9DEC,IACzBvB,EAASuB,EAAMC,OAAOE,MAAM,KA6DwBT,UAAU,iBAC1DF,IAAAC,cAAA,UAAQW,QA3DOrB,UACnBF,GAAa,GACb,MAAMwB,EAAW,IAAIC,SACrBD,EAASE,OAAO,YAAalC,GACzBG,GACF6B,EAASE,OAAO,QAAS/B,GAG3B,IACE,MAAMgC,QAAiBC,IAAMC,KAAK,iCAAkCL,EAAU,CAC5EM,QAAS,CACPC,eAAgB,yBAIdC,EAAiB,CACrB,CAAEC,KAAM,OAAQC,QAAS1C,GACzB,CAAEyC,KAAM,MAAOC,QAASP,EAASQ,KAAKC,OAExCtC,EAAeuC,GAAe,IAAIL,KAAmBK,IAGrDjC,aAAakC,QAAQ,cAAehC,KAAKiC,UAAU,IAAIP,KAAmBnC,KAC1E,MAAOW,GACPC,QAAQD,MAAM,SAAUA,GACzB,QACCR,GAAa,GACbP,EAAa,IACbG,EAAS,QA+BwB4C,SAAUzC,EAAWc,UAAU,iBAAgB,aAK/Ed,GAAaY,IAAAC,cAAA,OAAKC,UAAU,WAAU,yDAEvCF,IAAAC,cAAA,OAAKC,UAAU,gBACZhB,EAAY4C,IAAI,CAACC,EAASC,IACzBhC,IAAAC,cAAA,OAAKgC,IAAKD,EAAO9B,UAAS,WAAAgC,OAAaH,EAAQT,KAAI,aAChDS,EAAQR,WAKfvB,IAAAC,cAAA,UAAQW,QA1CerB,UACzB,UACQ0B,IAAMC,KAAK,2CACjB/B,EAAe,IACfM,aAAa0C,WAAW,eACxB,MAAOtC,GACPC,QAAQD,MAAM,+BAAgCA,KAoCTK,UAAU,gBAAe,8BCzGvDkC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHxC,IAAAC,cAACD,IAAMyC,WAAU,KACfzC,IAAAC,cAACrB,EAAG","file":"static/js/main.24d83e6f.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css'; // Import file CSS\n\nfunction App() {\n  const [userInput, setUserInput] = useState('');\n  const [image, setImage] = useState(null);\n  const [chatHistory, setChatHistory] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    // Load chat history on component mount\n    const loadHistory = async () => {\n      try {\n        // Note: You might want to fetch history from the server initially\n        // For simplicity, we'll just use local storage for now\n        const storedHistory = localStorage.getItem('chatHistory');\n        if (storedHistory) {\n          setChatHistory(JSON.parse(storedHistory));\n        }\n      } catch (error) {\n        console.error(\"Error loading chat history:\", error);\n      }\n    };\n    loadHistory();\n  }, []);\n\n  const handleInputChange = (event) => {\n    setUserInput(event.target.value);\n  };\n\n  const handleImageChange = (event) => {\n    setImage(event.target.files[0]);\n  };\n\n  const handleSubmit = async () => {\n    setIsLoading(true);\n    const formData = new FormData();\n    formData.append('userInput', userInput);\n    if (image) {\n      formData.append('image', image);\n    }\n\n    try {\n      const response = await axios.post('http://localhost:5000/api/chat', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      const newChatHistory = [\n        { role: 'user', content: userInput },\n        { role: 'aki', content: response.data.text }\n      ];\n      setChatHistory(prevHistory => [...newChatHistory, ...prevHistory]);\n\n      // Store updated history in local storage\n      localStorage.setItem('chatHistory', JSON.stringify([...newChatHistory, ...chatHistory]));\n    } catch (error) {\n      console.error(\"Error:\", error);\n    } finally {\n      setIsLoading(false);\n      setUserInput('');\n      setImage(null);\n    }\n  };\n\n  const handleClearHistory = async () => {\n    try {\n      await axios.post('http://localhost:5000/api/clear-history');\n      setChatHistory([]);\n      localStorage.removeItem('chatHistory'); // Clear from local storage\n    } catch (error) {\n      console.error(\"Error clearing chat history:\", error);\n    }\n  };\n\n  return (\n    <div className=\"app-container\">\n      <img src=\"/aki-maid.webp\" alt=\"Aki\" className=\"aki-image\" />\n      <h1 className=\"app-title\">Aki-Maid</h1>\n      <p className=\"app-description\">\n        Chào mừng bạn đến với chatbot Aki! Bạn có thể nhập câu hỏi và/hoặc tải lên hình ảnh để nhận câu trả lời từ Aki.\n      </p>\n\n      <div className=\"input-container\">\n        <input\n          type=\"text\"\n          value={userInput}\n          onChange={handleInputChange}\n          placeholder=\"Nhập câu hỏi của bạn:\"\n          className=\"user-input\"\n        />\n        <input type=\"file\" onChange={handleImageChange} className=\"image-upload\" />\n        <button onClick={handleSubmit} disabled={isLoading} className=\"submit-button\">\n          Gửi\n        </button>\n      </div>\n\n      {isLoading && <div className=\"loading\">Đang nhận phản hồi từ Aki...</div>}\n\n      <div className=\"chat-history\">\n        {chatHistory.map((message, index) => (\n          <div key={index} className={`message ${message.role}-message`}>\n            {message.content}\n          </div>\n        ))}\n      </div>\n\n      <button onClick={handleClearHistory} className=\"clear-button\">\n        Xóa lịch sử\n      </button>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);"],"sourceRoot":""}