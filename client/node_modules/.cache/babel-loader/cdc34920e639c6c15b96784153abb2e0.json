{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Downloads\\\\Aki-Chan\\\\client\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css'; // Import file CSS\n\nfunction App() {\n  const [userInput, setUserInput] = useState('');\n  const [image, setImage] = useState(null);\n  const [chatHistory, setChatHistory] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    // Load chat history on component mount\n    const loadHistory = async () => {\n      try {\n        // Note: You might want to fetch history from the server initially\n        // For simplicity, we'll just use local storage for now\n        const storedHistory = localStorage.getItem('chatHistory');\n        if (storedHistory) {\n          setChatHistory(JSON.parse(storedHistory));\n        }\n      } catch (error) {\n        console.error(\"Error loading chat history:\", error);\n      }\n    };\n    loadHistory();\n  }, []);\n  const handleInputChange = event => {\n    setUserInput(event.target.value);\n  };\n  const handleImageChange = event => {\n    setImage(event.target.files[0]);\n  };\n  const handleSubmit = async () => {\n    setIsLoading(true);\n    const formData = new FormData();\n    formData.append('userInput', userInput);\n    if (image) {\n      formData.append('image', image);\n    }\n    try {\n      const response = await axios.post('http://localhost:5000/api/chat', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      const newChatHistory = [{\n        role: 'user',\n        content: userInput\n      }, {\n        role: 'aki',\n        content: response.data.text\n      }];\n      setChatHistory(prevHistory => [...newChatHistory, ...prevHistory]);\n\n      // Store updated history in local storage\n      localStorage.setItem('chatHistory', JSON.stringify([...newChatHistory, ...chatHistory]));\n    } catch (error) {\n      console.error(\"Error:\", error);\n    } finally {\n      setIsLoading(false);\n      setUserInput('');\n      setImage(null);\n    }\n  };\n  const handleClearHistory = async () => {\n    try {\n      await axios.post('http://localhost:5000/api/clear-history');\n      setChatHistory([]);\n      localStorage.removeItem('chatHistory'); // Clear from local storage\n    } catch (error) {\n      console.error(\"Error clearing chat history:\", error);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/aki-maid.webp\",\n    alt: \"Aki\",\n    className: \"aki-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"app-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \"Aki-Maid\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"app-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, \"Ch\\xE0o m\\u1EEBng b\\u1EA1n \\u0111\\u1EBFn v\\u1EDBi chatbot Aki! B\\u1EA1n c\\xF3 th\\u1EC3 nh\\u1EADp c\\xE2u h\\u1ECFi v\\xE0/ho\\u1EB7c t\\u1EA3i l\\xEAn h\\xECnh \\u1EA3nh \\u0111\\u1EC3 nh\\u1EADn c\\xE2u tr\\u1EA3 l\\u1EDDi t\\u1EEB Aki.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: userInput,\n    onChange: handleInputChange,\n    placeholder: \"Nh\\u1EADp c\\xE2u h\\u1ECFi c\\u1EE7a b\\u1EA1n:\",\n    className: \"user-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: handleImageChange,\n    className: \"image-upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSubmit,\n    disabled: isLoading,\n    className: \"submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, \"G\\u1EEDi\")), isLoading && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, \"\\u0110ang nh\\u1EADn ph\\u1EA3n h\\u1ED3i t\\u1EEB Aki...\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-history\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, chatHistory.map((message, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: `message ${message.role}-message`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, message.content))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleClearHistory,\n    className: \"clear-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, \"X\\xF3a l\\u1ECBch s\\u1EED\"));\n}\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","axios","App","userInput","setUserInput","image","setImage","chatHistory","setChatHistory","isLoading","setIsLoading","loadHistory","storedHistory","localStorage","getItem","JSON","parse","error","console","handleInputChange","event","target","value","handleImageChange","files","handleSubmit","formData","FormData","append","response","post","headers","newChatHistory","role","content","data","text","prevHistory","setItem","stringify","handleClearHistory","removeItem","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","type","onChange","placeholder","onClick","disabled","map","message","index","key"],"sources":["C:/Users/Admin/Downloads/Aki-Chan/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css'; // Import file CSS\n\nfunction App() {\n  const [userInput, setUserInput] = useState('');\n  const [image, setImage] = useState(null);\n  const [chatHistory, setChatHistory] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    // Load chat history on component mount\n    const loadHistory = async () => {\n      try {\n        // Note: You might want to fetch history from the server initially\n        // For simplicity, we'll just use local storage for now\n        const storedHistory = localStorage.getItem('chatHistory');\n        if (storedHistory) {\n          setChatHistory(JSON.parse(storedHistory));\n        }\n      } catch (error) {\n        console.error(\"Error loading chat history:\", error);\n      }\n    };\n    loadHistory();\n  }, []);\n\n  const handleInputChange = (event) => {\n    setUserInput(event.target.value);\n  };\n\n  const handleImageChange = (event) => {\n    setImage(event.target.files[0]);\n  };\n\n  const handleSubmit = async () => {\n    setIsLoading(true);\n    const formData = new FormData();\n    formData.append('userInput', userInput);\n    if (image) {\n      formData.append('image', image);\n    }\n\n    try {\n      const response = await axios.post('http://localhost:5000/api/chat', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      const newChatHistory = [\n        { role: 'user', content: userInput },\n        { role: 'aki', content: response.data.text }\n      ];\n      setChatHistory(prevHistory => [...newChatHistory, ...prevHistory]);\n\n      // Store updated history in local storage\n      localStorage.setItem('chatHistory', JSON.stringify([...newChatHistory, ...chatHistory]));\n    } catch (error) {\n      console.error(\"Error:\", error);\n    } finally {\n      setIsLoading(false);\n      setUserInput('');\n      setImage(null);\n    }\n  };\n\n  const handleClearHistory = async () => {\n    try {\n      await axios.post('http://localhost:5000/api/clear-history');\n      setChatHistory([]);\n      localStorage.removeItem('chatHistory'); // Clear from local storage\n    } catch (error) {\n      console.error(\"Error clearing chat history:\", error);\n    }\n  };\n\n  return (\n    <div className=\"app-container\">\n      <img src=\"/aki-maid.webp\" alt=\"Aki\" className=\"aki-image\" />\n      <h1 className=\"app-title\">Aki-Maid</h1>\n      <p className=\"app-description\">\n        Chào mừng bạn đến với chatbot Aki! Bạn có thể nhập câu hỏi và/hoặc tải lên hình ảnh để nhận câu trả lời từ Aki.\n      </p>\n\n      <div className=\"input-container\">\n        <input\n          type=\"text\"\n          value={userInput}\n          onChange={handleInputChange}\n          placeholder=\"Nhập câu hỏi của bạn:\"\n          className=\"user-input\"\n        />\n        <input type=\"file\" onChange={handleImageChange} className=\"image-upload\" />\n        <button onClick={handleSubmit} disabled={isLoading} className=\"submit-button\">\n          Gửi\n        </button>\n      </div>\n\n      {isLoading && <div className=\"loading\">Đang nhận phản hồi từ Aki...</div>}\n\n      <div className=\"chat-history\">\n        {chatHistory.map((message, index) => (\n          <div key={index} className={`message ${message.role}-message`}>\n            {message.content}\n          </div>\n        ))}\n      </div>\n\n      <button onClick={handleClearHistory} className=\"clear-button\">\n        Xóa lịch sử\n      </button>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}