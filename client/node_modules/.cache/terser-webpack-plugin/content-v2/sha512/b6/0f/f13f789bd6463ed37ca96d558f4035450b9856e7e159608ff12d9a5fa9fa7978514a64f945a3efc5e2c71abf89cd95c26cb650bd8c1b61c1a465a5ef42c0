{"map":"{\"version\":3,\"sources\":[\"C:/Users/Admin/Downloads/Aki-Chan/client/src/App.js\",\"C:/Users/Admin/Downloads/Aki-Chan/client/src/index.js\"],\"names\":[\"App\",\"userInput\",\"setUserInput\",\"useState\",\"image\",\"setImage\",\"chatHistory\",\"setChatHistory\",\"isLoading\",\"setIsLoading\",\"useEffect\",\"async\",\"storedHistory\",\"localStorage\",\"getItem\",\"JSON\",\"parse\",\"error\",\"console\",\"loadHistory\",\"React\",\"createElement\",\"className\",\"src\",\"alt\",\"type\",\"value\",\"onChange\",\"event\",\"target\",\"placeholder\",\"files\",\"onClick\",\"formData\",\"FormData\",\"append\",\"response\",\"axios\",\"post\",\"headers\",\"Content-Type\",\"newChatHistory\",\"role\",\"content\",\"data\",\"text\",\"prevHistory\",\"setItem\",\"stringify\",\"disabled\",\"map\",\"message\",\"index\",\"key\",\"concat\",\"removeItem\",\"ReactDOM\",\"createRoot\",\"document\",\"getElementById\",\"render\",\"StrictMode\"],\"mappings\":\"2MAoHeA,IAAAA,EAhHf,WACE,MAAOC,EAAWC,GAAgBC,OAAAA,EAAAA,SAAAA,CAAS,KACpCC,EAAOC,GAAYF,OAAAA,EAAAA,SAAAA,CAAS,OAC5BG,EAAaC,GAAkBJ,OAAAA,EAAAA,SAAAA,CAAS,KACxCK,EAAWC,GAAgBN,OAAAA,EAAAA,SAAAA,EAAS,GAqE3C,OAnEAO,OAAAA,EAAAA,UAAAA,CAAU,KAEYC,WAClB,IAGE,MAAMC,EAAgBC,aAAaC,QAAQ,eACvCF,GACFL,EAAeQ,KAAKC,MAAMJ,IAE5B,MAAOK,GACPC,QAAQD,MAAM,8BAA+BA,KAGjDE,IACC,IAqDDC,EAAAA,EAAAC,cAAA,MAAA,CAAKC,UAAU,iBACbF,EAAAA,EAAAC,cAAA,MAAA,CAAKE,IAAI,iBAAiBC,IAAI,MAAMF,UAAU,cAC9CF,EAAAA,EAAAC,cAAA,KAAA,CAAIC,UAAU,aAAY,YAC1BF,EAAAA,EAAAC,cAAA,IAAA,CAAGC,UAAU,mBAAkB,kOAI/BF,EAAAA,EAAAC,cAAA,MAAA,CAAKC,UAAU,mBACbF,EAAAA,EAAAC,cAAA,QAAA,CACEI,KAAK,OACLC,MAAOzB,EACP0B,SA9DmBC,IACzB1B,EAAa0B,EAAMC,OAAOH,QA8DpBI,YAAY,+CACZR,UAAU,eAEZF,EAAAA,EAAAC,cAAA,QAAA,CAAOI,KAAK,OAAOE,SA9DEC,IACzBvB,EAASuB,EAAMC,OAAOE,MAAM,KA6DwBT,UAAU,iBAC1DF,EAAAA,EAAAC,cAAA,SAAA,CAAQW,QA3DOrB,UACnBF,GAAa,GACb,MAAMwB,EAAW,IAAIC,SACrBD,EAASE,OAAO,YAAalC,GACzBG,GACF6B,EAASE,OAAO,QAAS/B,GAG3B,IACE,MAAMgC,QAAiBC,EAAAA,EAAMC,KAAK,iCAAkCL,EAAU,CAC5EM,QAAS,CACPC,eAAgB,yBAIdC,EAAiB,CACrB,CAAEC,KAAM,OAAQC,QAAS1C,GACzB,CAAEyC,KAAM,MAAOC,QAASP,EAASQ,KAAKC,OAExCtC,EAAeuC,GAAe,IAAIL,KAAmBK,IAGrDjC,aAAakC,QAAQ,cAAehC,KAAKiC,UAAU,IAAIP,KAAmBnC,KAC1E,MAAOW,GACPC,QAAQD,MAAM,SAAUA,GACzB,QACCR,GAAa,GACbP,EAAa,IACbG,EAAS,QA+BwB4C,SAAUzC,EAAWc,UAAU,iBAAgB,aAK/Ed,GAAaY,EAAAA,EAAAC,cAAA,MAAA,CAAKC,UAAU,WAAU,yDAEvCF,EAAAA,EAAAC,cAAA,MAAA,CAAKC,UAAU,gBACZhB,EAAY4C,IAAI,CAACC,EAASC,IACzBhC,EAAAA,EAAAC,cAAA,MAAA,CAAKgC,IAAKD,EAAO9B,UAAS,WAAAgC,OAAaH,EAAQT,KAAI,aAChDS,EAAQR,WAKfvB,EAAAA,EAAAC,cAAA,SAAA,CAAQW,QA1CerB,UACzB,UACQ0B,EAAAA,EAAMC,KAAK,2CACjB/B,EAAe,IACfM,aAAa0C,WAAW,eACxB,MAAOtC,GACPC,QAAQD,MAAM,+BAAgCA,KAoCTK,UAAU,gBAAe,8BCzGvDkC,EAAAA,EAASC,WAAWC,SAASC,eAAe,SACpDC,OACHxC,EAAAA,EAAAC,cAACD,EAAAA,EAAMyC,WAAU,KACfzC,EAAAA,EAAAC,cAACrB,EAAG\",\"sourcesContent\":[\"import React, { useState, useEffect } from 'react';\\nimport axios from 'axios';\\nimport './App.css'; // Import file CSS\\n\\nfunction App() {\\n  const [userInput, setUserInput] = useState('');\\n  const [image, setImage] = useState(null);\\n  const [chatHistory, setChatHistory] = useState([]);\\n  const [isLoading, setIsLoading] = useState(false);\\n\\n  useEffect(() => {\\n    // Load chat history on component mount\\n    const loadHistory = async () => {\\n      try {\\n        // Note: You might want to fetch history from the server initially\\n        // For simplicity, we'll just use local storage for now\\n        const storedHistory = localStorage.getItem('chatHistory');\\n        if (storedHistory) {\\n          setChatHistory(JSON.parse(storedHistory));\\n        }\\n      } catch (error) {\\n        console.error(\\\"Error loading chat history:\\\", error);\\n      }\\n    };\\n    loadHistory();\\n  }, []);\\n\\n  const handleInputChange = (event) => {\\n    setUserInput(event.target.value);\\n  };\\n\\n  const handleImageChange = (event) => {\\n    setImage(event.target.files[0]);\\n  };\\n\\n  const handleSubmit = async () => {\\n    setIsLoading(true);\\n    const formData = new FormData();\\n    formData.append('userInput', userInput);\\n    if (image) {\\n      formData.append('image', image);\\n    }\\n\\n    try {\\n      const response = await axios.post('http://localhost:5000/api/chat', formData, {\\n        headers: {\\n          'Content-Type': 'multipart/form-data'\\n        }\\n      });\\n\\n      const newChatHistory = [\\n        { role: 'user', content: userInput },\\n        { role: 'aki', content: response.data.text }\\n      ];\\n      setChatHistory(prevHistory => [...newChatHistory, ...prevHistory]);\\n\\n      // Store updated history in local storage\\n      localStorage.setItem('chatHistory', JSON.stringify([...newChatHistory, ...chatHistory]));\\n    } catch (error) {\\n      console.error(\\\"Error:\\\", error);\\n    } finally {\\n      setIsLoading(false);\\n      setUserInput('');\\n      setImage(null);\\n    }\\n  };\\n\\n  const handleClearHistory = async () => {\\n    try {\\n      await axios.post('http://localhost:5000/api/clear-history');\\n      setChatHistory([]);\\n      localStorage.removeItem('chatHistory'); // Clear from local storage\\n    } catch (error) {\\n      console.error(\\\"Error clearing chat history:\\\", error);\\n    }\\n  };\\n\\n  return (\\n    <div className=\\\"app-container\\\">\\n      <img src=\\\"/aki-maid.webp\\\" alt=\\\"Aki\\\" className=\\\"aki-image\\\" />\\n      <h1 className=\\\"app-title\\\">Aki-Maid</h1>\\n      <p className=\\\"app-description\\\">\\n        Chào mừng bạn đến với chatbot Aki! Bạn có thể nhập câu hỏi và/hoặc tải lên hình ảnh để nhận câu trả lời từ Aki.\\n      </p>\\n\\n      <div className=\\\"input-container\\\">\\n        <input\\n          type=\\\"text\\\"\\n          value={userInput}\\n          onChange={handleInputChange}\\n          placeholder=\\\"Nhập câu hỏi của bạn:\\\"\\n          className=\\\"user-input\\\"\\n        />\\n        <input type=\\\"file\\\" onChange={handleImageChange} className=\\\"image-upload\\\" />\\n        <button onClick={handleSubmit} disabled={isLoading} className=\\\"submit-button\\\">\\n          Gửi\\n        </button>\\n      </div>\\n\\n      {isLoading && <div className=\\\"loading\\\">Đang nhận phản hồi từ Aki...</div>}\\n\\n      <div className=\\\"chat-history\\\">\\n        {chatHistory.map((message, index) => (\\n          <div key={index} className={`message ${message.role}-message`}>\\n            {message.content}\\n          </div>\\n        ))}\\n      </div>\\n\\n      <button onClick={handleClearHistory} className=\\\"clear-button\\\">\\n        Xóa lịch sử\\n      </button>\\n    </div>\\n  );\\n}\\n\\nexport default App;\",\"import React from 'react';\\nimport ReactDOM from 'react-dom/client';\\nimport App from './App';\\n\\nconst root = ReactDOM.createRoot(document.getElementById('root'));\\nroot.render(\\n  <React.StrictMode>\\n    <App />\\n  </React.StrictMode>\\n);\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{10:function(e,t,a){e.exports=a(23)},18:function(e,t,a){},23:function(e,t,a){\"use strict\";a.r(t);var n=a(2),c=a.n(n),r=a(9),o=a.n(r),l=a(25);a(18);var s=function(){const[e,t]=Object(n.useState)(\"\"),[a,r]=Object(n.useState)(null),[o,s]=Object(n.useState)([]),[i,m]=Object(n.useState)(!1);return Object(n.useEffect)(()=>{(async()=>{try{const t=localStorage.getItem(\"chatHistory\");t&&s(JSON.parse(t))}catch(e){console.error(\"Error loading chat history:\",e)}})()},[]),c.a.createElement(\"div\",{className:\"app-container\"},c.a.createElement(\"img\",{src:\"/aki-maid.webp\",alt:\"Aki\",className:\"aki-image\"}),c.a.createElement(\"h1\",{className:\"app-title\"},\"Aki-Maid\"),c.a.createElement(\"p\",{className:\"app-description\"},\"Ch\\xe0o m\\u1eebng b\\u1ea1n \\u0111\\u1ebfn v\\u1edbi chatbot Aki! B\\u1ea1n c\\xf3 th\\u1ec3 nh\\u1eadp c\\xe2u h\\u1ecfi v\\xe0/ho\\u1eb7c t\\u1ea3i l\\xean h\\xecnh \\u1ea3nh \\u0111\\u1ec3 nh\\u1eadn c\\xe2u tr\\u1ea3 l\\u1eddi t\\u1eeb Aki.\"),c.a.createElement(\"div\",{className:\"input-container\"},c.a.createElement(\"input\",{type:\"text\",value:e,onChange:e=>{t(e.target.value)},placeholder:\"Nh\\u1eadp c\\xe2u h\\u1ecfi c\\u1ee7a b\\u1ea1n:\",className:\"user-input\"}),c.a.createElement(\"input\",{type:\"file\",onChange:e=>{r(e.target.files[0])},className:\"image-upload\"}),c.a.createElement(\"button\",{onClick:async()=>{m(!0);const n=new FormData;n.append(\"userInput\",e),a&&n.append(\"image\",a);try{const a=await l.a.post(\"http://localhost:5000/api/chat\",n,{headers:{\"Content-Type\":\"multipart/form-data\"}}),i=[{role:\"user\",content:e},{role:\"aki\",content:a.data.text}];s(e=>[...i,...e]),localStorage.setItem(\"chatHistory\",JSON.stringify([...i,...o]))}catch(c){console.error(\"Error:\",c)}finally{m(!1),t(\"\"),r(null)}},disabled:i,className:\"submit-button\"},\"G\\u1eedi\")),i&&c.a.createElement(\"div\",{className:\"loading\"},\"\\u0110ang nh\\u1eadn ph\\u1ea3n h\\u1ed3i t\\u1eeb Aki...\"),c.a.createElement(\"div\",{className:\"chat-history\"},o.map((e,t)=>c.a.createElement(\"div\",{key:t,className:\"message \".concat(e.role,\"-message\")},e.content))),c.a.createElement(\"button\",{onClick:async()=>{try{await l.a.post(\"http://localhost:5000/api/clear-history\"),s([]),localStorage.removeItem(\"chatHistory\")}catch(e){console.error(\"Error clearing chat history:\",e)}},className:\"clear-button\"},\"X\\xf3a l\\u1ecbch s\\u1eed\"))};o.a.createRoot(document.getElementById(\"root\")).render(c.a.createElement(c.a.StrictMode,null,c.a.createElement(s,null)))}},[[10,1,2]]]);","extractedComments":[]}